type_color <- mbti_colors[mbti_type]
fill_color <- adjustcolor(type_color, alpha.f = 0.3)
radarchart(radar_data,
pcol = type_color,
pfcol = fill_color,
plwd = 2,
cglcol = "grey", cglty = 1, axislabcol = "grey", caxislabels = seq(0, 20, 5), cglwd = 0.8,
title = mbti_type,
vlcex = 0.8)
})
}
shinyApp(ui, server)
library(tidyverse)
library(shiny)
library(fmsb)
library(shiny)
ui <- fluidPage(
titlePanel("MBTI Radar Charts"),
sidebarLayout(
sidebarPanel(
selectInput("selectedMBTI", "Choose MBTI Type:",
choices = unique(mbtis$mbti))
),
mainPanel(
plotOutput("radarChart")
)
)
)
server <- function(input, output) {
output$radarChart <- renderPlot({
mbti_type <- input$selectedMBTI
mbti_data <- mbtis_means %>% filter(mbti == mbti_type)
radar_data <- rbind(Max = max_values, Min = min_values, mbti_data[-1])
type_color <- mbti_colors[mbti_type]
fill_color <- adjustcolor(type_color, alpha.f = 0.3)
radarchart(radar_data,
pcol = type_color,
pfcol = fill_color,
plwd = 2,
cglcol = "grey", cglty = 1, axislabcol = "grey", caxislabels = seq(0, 20, 5), cglwd = 0.8,
title = mbti_type,
vlcex = 0.8)
})
}
shinyApp(ui, server)
library(shiny)
library(tidyverse)
ui <- fluidPage(
titlePanel("MBTI Radar Charts"),
sidebarLayout(
sidebarPanel(
selectInput("selectedMBTI", "Choose MBTI Type:",
choices = unique(mbtis$mbti))
),
mainPanel(
plotOutput("radarChart")
)
)
)
server <- function(input, output) {
output$radarChart <- renderPlot({
mbti_type <- input$selectedMBTI
mbti_data <- mbtis_means %>% filter(mbti == mbti_type)
radar_data <- rbind(Max = max_values, Min = min_values, mbti_data[-1])
type_color <- mbti_colors[mbti_type]
fill_color <- adjustcolor(type_color, alpha.f = 0.3)
radarchart(radar_data,
pcol = type_color,
pfcol = fill_color,
plwd = 2,
cglcol = "grey", cglty = 1, axislabcol = "grey", caxislabels = seq(0, 20, 5), cglwd = 0.8,
title = mbti_type,
vlcex = 0.8)
})
}
shinyApp(ui, server)
library(shiny)
library(tidyverse)
ui <- fluidPage(
titlePanel("MBTI Radar Charts"),
sidebarLayout(
sidebarPanel(
selectInput("selectedMBTI", "Choose MBTI Type:",
choices = unique(mbtis$mbti))
),
mainPanel(
plotOutput("radarChart")
)
)
)
server <- function(input, output) {
output$radarChart <- renderPlot({
mbti_type <- input$selectedMBTI
mbti_data <- mbtis_means %>% filter(mbti == mbti_type)
radar_data <- rbind(Max = max_values, Min = min_values, mbti_data[-1])
type_color <- mbti_colors[mbti_type]
fill_color <- adjustcolor(type_color, alpha.f = 0.3)
radarchart(radar_data,
pcol = type_color,
pfcol = fill_color,
plwd = 2,
cglcol = "grey", cglty = 1, axislabcol = "grey", caxislabels = seq(0, 20, 5), cglwd = 0.8,
title = mbti_type,
vlcex = 0.8)
})
}
shinyApp(ui, server)
library(shiny)
mbti_images <- c(
"INTJ" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQi2VRFrPrpaSQSu8P9KpMiuZUbEjAMYzpyNdgZLsng2Q&s",
"INTP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSlOUv5i5v8mqz19m7xV7ZD5WPwT3wm3SgV-lmatt4Y-w&s",
"ENTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/entj-commander.png",
"ENTP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQyWr3zzuitEGEJa1vq0PK_Rsdwuc_z-3IW5rJsT74NKg&s",
"INFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/infj-advocate.svg?v=3",
"INFP" = "https://www.16personalities.com/static/images/personality-types/avatars/infp-mediator.png",
"ENFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/enfj-protagonist.png",
"ENFP" = "https://www.16personalities.com/static/images/personality-types/avatars/enfp-campaigner.svg?v=3",
"ISTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/istj-logistician.png",
"ISFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/isfj-defender.png",
"ESTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/estj-executive.png",
"ESFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/esfj-consul.png",
"ISTP" = "https://www.16personalities.com/static/images/personality-types/avatars/istp-virtuoso.png",
"ISFP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT-_cAGZD35zF-jIvqaP_ZROUgP8PyYINJlJdEqAIVWvA&s",
"ESTP" = "https://www.16personalities.com/static/images/personality-types/avatars/estp-entrepreneur.png",
"ESFP" = "https://static.neris-assets.com/images/personality-types/avatars/esfp-entertainer.png"
)
ui <- fluidPage(
titlePanel("MBTI Radar Charts"),
sidebarLayout(
sidebarPanel(
selectInput("selectedMBTI", "Choose MBTI Type:",
choices = unique(mbtis$mbti))
),
mainPanel(
plotOutput("radarChart"),
uiOutput("mbtiImage")
)
)
)
server <- function(input, output) {
output$radarChart <- renderPlot({
mbti_type <- input$selectedMBTI
mbti_data <- mbtis_means %>% filter(mbti == mbti_type)
radar_data <- rbind(Max = max_values, Min = min_values, mbti_data[-1])
type_color <- mbti_colors[mbti_type]
fill_color <- adjustcolor(type_color, alpha.f = 0.3)
radarchart(radar_data,
pcol = type_color,
pfcol = fill_color,
plwd = 2,
cglcol = "grey", cglty = 1, axislabcol = "grey", caxislabels = seq(0, 20, 5), cglwd = 0.8,
title = mbti_type,
vlcex = 0.8)
})
output$mbtiImage <- renderUI({
selected_mbti <- input$selectedMBTI
img_url <- mbti_images[selected_mbti]
if (!is.null(img_url)) {
tags$img(src = img_url, alt = selected_mbti, width = "100%")
}
})
}
shinyApp(ui, server)
library(shiny)
mbti_images <- c(
"INTJ" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQi2VRFrPrpaSQSu8P9KpMiuZUbEjAMYzpyNdgZLsng2Q&s",
"INTP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSlOUv5i5v8mqz19m7xV7ZD5WPwT3wm3SgV-lmatt4Y-w&s",
"ENTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/entj-commander.png",
"ENTP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQyWr3zzuitEGEJa1vq0PK_Rsdwuc_z-3IW5rJsT74NKg&s",
"INFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/infj-advocate.svg?v=3",
"INFP" = "https://www.16personalities.com/static/images/personality-types/avatars/infp-mediator.png",
"ENFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/enfj-protagonist.png",
"ENFP" = "https://www.16personalities.com/static/images/personality-types/avatars/enfp-campaigner.svg?v=3",
"ISTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/istj-logistician.png",
"ISFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/isfj-defender.png",
"ESTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/estj-executive.png",
"ESFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/esfj-consul.png",
"ISTP" = "https://www.16personalities.com/static/images/personality-types/avatars/istp-virtuoso.png",
"ISFP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT-_cAGZD35zF-jIvqaP_ZROUgP8PyYINJlJdEqAIVWvA&s",
"ESTP" = "https://www.16personalities.com/static/images/personality-types/avatars/estp-entrepreneur.png",
"ESFP" = "https://static.neris-assets.com/images/personality-types/avatars/esfp-entertainer.png"
)
ui <- fluidPage(
titlePanel("MBTI Radar Charts"),
sidebarLayout(
sidebarPanel(
selectInput("selectedMBTI", "Choose MBTI Type:",
choices = unique(mbtis$mbti))
),
mainPanel(
plotOutput("radarChart"),
uiOutput("mbtiImage")
)
)
)
server <- function(input, output) {
output$radarChart <- renderPlot({
mbti_type <- input$selectedMBTI
mbti_data <- mbtis_means %>% filter(mbti == mbti_type)
radar_data <- rbind(Max = max_values, Min = min_values, mbti_data[-1])
type_color <- mbti_colors[mbti_type]
fill_color <- adjustcolor(type_color, alpha.f = 0.3)
radarchart(radar_data,
pcol = type_color,
pfcol = fill_color,
plwd = 2,
cglcol = "grey", cglty = 1, axislabcol = "grey", caxislabels = seq(0, 20, 5), cglwd = 0.8,
title = mbti_type,
vlcex = 0.8)
})
output$mbtiImage <- renderUI({
selected_mbti <- input$selectedMBTI
img_url <- mbti_images[selected_mbti]
if (!is.null(img_url)) {
tags$img(src = img_url, alt = selected_mbti, width = "100%")
}
})
}
shinyApp(ui, server)
library(shiny)
mbti_images <- c(
"INTJ" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQi2VRFrPrpaSQSu8P9KpMiuZUbEjAMYzpyNdgZLsng2Q&s",
"INTP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSlOUv5i5v8mqz19m7xV7ZD5WPwT3wm3SgV-lmatt4Y-w&s",
"ENTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/entj-commander.png",
"ENTP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQyWr3zzuitEGEJa1vq0PK_Rsdwuc_z-3IW5rJsT74NKg&s",
"INFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/infj-advocate.svg?v=3",
"INFP" = "https://www.16personalities.com/static/images/personality-types/avatars/infp-mediator.png",
"ENFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/enfj-protagonist.png",
"ENFP" = "https://www.16personalities.com/static/images/personality-types/avatars/enfp-campaigner.svg?v=3",
"ISTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/istj-logistician.png",
"ISFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/isfj-defender.png",
"ESTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/estj-executive.png",
"ESFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/esfj-consul.png",
"ISTP" = "https://www.16personalities.com/static/images/personality-types/avatars/istp-virtuoso.png",
"ISFP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT-_cAGZD35zF-jIvqaP_ZROUgP8PyYINJlJdEqAIVWvA&s",
"ESTP" = "https://www.16personalities.com/static/images/personality-types/avatars/estp-entrepreneur.png",
"ESFP" = "https://static.neris-assets.com/images/personality-types/avatars/esfp-entertainer.png"
)
mbti_name <- c(
"INTJ" = "Architect",
"INTP" = "Logician",
"ENTJ" = "Commander",
"ENTP" = "Debater",
"INFJ" = "Advocate",
"INFP" = "Mediator",
"ENFJ" = "Protagonist",
"ENFP" = "Campaigner",
"ISTJ" = "Logistician",
"ISFJ" = "Defender",
"ESTJ" = "Executive",
"ESFJ" = "Consul",
"ISTP" = "Virtuoso",
"ISFP" = "Adventurer",
"ESTP" = "Entrepreneur",
"ESFP" = "Entertainer"
)
ui <- fluidPage(
titlePanel("MBTI Radar Charts"),
sidebarLayout(
sidebarPanel(
selectInput("selectedMBTI", "Choose MBTI Type:",
choices = unique(mbtis$mbti))
),
mainPanel(
uiOutput("mbtiImage"),
textOutput("mbtiName"),
plotOutput("radarChart")
)
)
)
server <- function(input, output) {
output$radarChart <- renderPlot({
mbti_type <- input$selectedMBTI
mbti_data <- mbtis_means %>% filter(mbti == mbti_type)
radar_data <- rbind(Max = max_values, Min = min_values, mbti_data[-1])
type_color <- mbti_colors[mbti_type]
fill_color <- adjustcolor(type_color, alpha.f = 0.3)
radarchart(radar_data,
pcol = type_color,
pfcol = fill_color,
plwd = 2,
cglcol = "grey", cglty = 1, axislabcol = "grey", caxislabels = seq(0, 20, 5), cglwd = 0.8,
title = mbti_type,
vlcex = 0.8)
})
output$mbtiImage <- renderUI({
selected_mbti <- input$selectedMBTI
img_url <- mbti_images[selected_mbti]
if (!is.null(img_url)) {
tags$img(src = img_url, alt = selected_mbti, width = "40%")
}
})
output$mbtiName <- renderText({
selected_mbti <- input$selectedMBTI
desc <- mbti_name[selected_mbti]
if (!is.null(desc)) {
paste(selected_mbti, ":", desc)
}
})
}
shinyApp(ui, server)
library(tidyverse)
#library(fmsb)
#  mbtis <- read_delim("../201data/combined_mbti_df.csv")
library(fmsb)
mbtis <- read_delim("/Users/amelia/Github/info201mbti/combined_mbti_df.csv")
mbtis %>%
group_by(mbti, group = ceiling(row_number() / 30)) %>%
summarize(n = mean(valence_mean)) %>%
mutate(four_cats = ifelse(str_detect(mbti, "NF"), "NF",
ifelse(str_detect(mbti, "NT"), "NT",
ifelse(str_detect(mbti, "SF"), "SF",
ifelse(str_detect(mbti, "ST"), "ST", ""))))) %>%
arrange(desc(four_cats)) %>%
ggplot(aes(mbti, n, color=mbti)) +
geom_point() +
labs(x = "mbti", y="mean valence") +
scale_color_manual(
values = c( ENTJ="#95637e",
ENTP="#95637e",
INTJ="#95637e",
INTP="#95637e",
ENFP="#9ac262",
ENFJ="#9ac262",
INFP="#9ac262",
INFJ="#9ac262",
ESFJ="#72cccd",
ESTJ="#72cccd",
ISFJ="#72cccd",
ISTJ="#72cccd",
ESFP="#e5c727",
ESTP="#e5c727",
ISFP="#e5c727",
ISTP="#e5c727"
)) +
theme(axis.text.x = element_text(angle = 45))
library(tidyverse)
#library(fmsb)
#  mbtis <- read_delim("../201data/combined_mbti_df.csv")
library(fmsb)
mbtis <- read_delim("/Users/amelia/Github/info201mbti/combined_mbti_df.csv")
mbtis %>%
group_by(mbti, group = ceiling(row_number() / 30)) %>%
summarize(n = mean(valence_mean)) %>%
mutate(four_cats = ifelse(str_detect(mbti, "NF"), "NF",
ifelse(str_detect(mbti, "NT"), "NT",
ifelse(str_detect(mbti, "SF"), "SF",
ifelse(str_detect(mbti, "ST"), "ST", ""))))) %>%
arrange(desc(four_cats)) %>%
ggplot(aes(mbti, n, color=mbti)) +
geom_point() +
labs(x = "mbti", y="mean valence") +
scale_color_manual(
values = c( ENTJ="#95637e",
ENTP="#95637e",
INTJ="#95637e",
INTP="#95637e",
ENFP="#9ac262",
ENFJ="#9ac262",
INFP="#9ac262",
INFJ="#9ac262",
ESFJ="#72cccd",
ESTJ="#72cccd",
ISFJ="#72cccd",
ISTJ="#72cccd",
ESFP="#e5c727",
ESTP="#e5c727",
ISFP="#e5c727",
ISTP="#e5c727"
)) +
theme(axis.text.x = element_text(angle = 45))
library(tidyverse)
#library(fmsb)
#  mbtis <- read_delim("../201data/combined_mbti_df.csv")
library(fmsb)
mbtis <- read_delim("/Users/amelia/Github/info201mbti/combined_mbti_df.csv")
mbtis %>%
group_by(mbti, group = ceiling(row_number() / 30)) %>%
summarize(n = mean(valence_mean)) %>%
mutate(four_cats = ifelse(str_detect(mbti, "NF"), "NF",
ifelse(str_detect(mbti, "NT"), "NT",
ifelse(str_detect(mbti, "SF"), "SF",
ifelse(str_detect(mbti, "ST"), "ST", ""))))) %>%
arrange(desc(four_cats)) %>%
ggplot(aes(mbti, n, color=mbti)) +
geom_point() +
labs(x = "mbti", y="mean valence") +
scale_color_manual(
values = c( ENTJ="#95637e",
ENTP="#95637e",
INTJ="#95637e",
INTP="#95637e",
ENFP="#9ac262",
ENFJ="#9ac262",
INFP="#9ac262",
INFJ="#9ac262",
ESFJ="#72cccd",
ESTJ="#72cccd",
ISFJ="#72cccd",
ISTJ="#72cccd",
ESFP="#e5c727",
ESTP="#e5c727",
ISFP="#e5c727",
ISTP="#e5c727"
)) +
theme(axis.text.x = element_text(angle = 45))
View(mbtis)
library(shiny)
mbti_images <- c(
"INTJ" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQi2VRFrPrpaSQSu8P9KpMiuZUbEjAMYzpyNdgZLsng2Q&s",
"INTP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSlOUv5i5v8mqz19m7xV7ZD5WPwT3wm3SgV-lmatt4Y-w&s",
"ENTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/entj-commander.png",
"ENTP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQyWr3zzuitEGEJa1vq0PK_Rsdwuc_z-3IW5rJsT74NKg&s",
"INFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/infj-advocate.svg?v=3",
"INFP" = "https://www.16personalities.com/static/images/personality-types/avatars/infp-mediator.png",
"ENFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/enfj-protagonist.png",
"ENFP" = "https://www.16personalities.com/static/images/personality-types/avatars/enfp-campaigner.svg?v=3",
"ISTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/istj-logistician.png",
"ISFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/isfj-defender.png",
"ESTJ" = "https://www.16personalities.com/static/images/personality-types/avatars/estj-executive.png",
"ESFJ" = "https://www.16personalities.com/static/images/personality-types/avatars/esfj-consul.png",
"ISTP" = "https://www.16personalities.com/static/images/personality-types/avatars/istp-virtuoso.png",
"ISFP" = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT-_cAGZD35zF-jIvqaP_ZROUgP8PyYINJlJdEqAIVWvA&s",
"ESTP" = "https://www.16personalities.com/static/images/personality-types/avatars/estp-entrepreneur.png",
"ESFP" = "https://static.neris-assets.com/images/personality-types/avatars/esfp-entertainer.png"
)
mbti_name <- c(
"INTJ" = "Architect",
"INTP" = "Logician",
"ENTJ" = "Commander",
"ENTP" = "Debater",
"INFJ" = "Advocate",
"INFP" = "Mediator",
"ENFJ" = "Protagonist",
"ENFP" = "Campaigner",
"ISTJ" = "Logistician",
"ISFJ" = "Defender",
"ESTJ" = "Executive",
"ESFJ" = "Consul",
"ISTP" = "Virtuoso",
"ISFP" = "Adventurer",
"ESTP" = "Entrepreneur",
"ESFP" = "Entertainer"
)
ui <- fluidPage(
titlePanel("MBTI Radar Charts"),
sidebarLayout(
sidebarPanel(
selectInput("selectedMBTI", "Choose MBTI Type:",
choices = unique(mbtis$mbti))
),
mainPanel(
uiOutput("mbtiImage"),
textOutput("mbtiName"),
plotOutput("radarChart")
)
)
)
server <- function(input, output) {
output$radarChart <- renderPlot({
mbti_type <- input$selectedMBTI
mbti_data <- mbtis_means %>% filter(mbti == mbti_type)
radar_data <- rbind(Max = max_values, Min = min_values, mbti_data[-1])
type_color <- mbti_colors[mbti_type]
fill_color <- adjustcolor(type_color, alpha.f = 0.3)
radarchart(radar_data,
pcol = type_color,
pfcol = fill_color,
plwd = 2,
cglcol = "grey", cglty = 1, axislabcol = "grey", caxislabels = seq(0, 20, 5), cglwd = 0.8,
title = mbti_type,
vlcex = 0.8)
})
output$mbtiImage <- renderUI({
selected_mbti <- input$selectedMBTI
img_url <- mbti_images[selected_mbti]
if (!is.null(img_url)) {
tags$img(src = img_url, alt = selected_mbti, width = "40%")
}
})
output$mbtiName <- renderText({
selected_mbti <- input$selectedMBTI
desc <- mbti_name[selected_mbti]
if (!is.null(desc)) {
paste(selected_mbti, ":", desc)
}
})
}
shinyApp(ui, server)
mbtis <- mbtis %>%
mutate(mbti_index = row_number())
# Define a function to calculate Euclidean distance
calculate_euclidean_distance <- function(mbti_row, spotify_row) {
sqrt(sum((mbti_row - spotify_row)^2))
}
music_features <- c("danceability", "valence", "energy", "acousticness", "liveness", "speechiness")
# Initialize a list to store the top five similar tracks for each MBTI row
top_tracks_list <- vector("list", length = nrow(mbtis))
for (i in 1:nrow(mbtis)) {
track_distances <- numeric(nrow(spo))
for (j in 1:nrow(spo)) {
distance <- calculate_euclidean_distance(mbtis[i, music_features], spo[j, music_features])
track_distances[j] <- distance
}
# Get indices of top five lowest distances
top_indices <- order(track_distances)[1:5]
# Randomly select three out of the top five tracks
selected_indices <- sample(top_indices, 3)
top_tracks <- spo$artist[selected_indices]
# Store the results
top_tracks_list[[i]] <- data.frame(artist = top_tracks, distance = track_distances[selected_indices])
}
